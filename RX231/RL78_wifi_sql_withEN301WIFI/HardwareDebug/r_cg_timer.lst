   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.global	_R_TAU0_Create
  36                             	_R_TAU0_Create:
  37                             	.LFB0:
  38                             		.file 1 "../src/r_cg_timer.c"
   1:../src/r_cg_timer.c **** /**************************************************************************************************
   2:../src/r_cg_timer.c **** * DISCLAIMER
   3:../src/r_cg_timer.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer.c **** * following link:
  15:../src/r_cg_timer.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer.c **** *
  17:../src/r_cg_timer.c **** * Copyright (C) 2011, 2016 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer.c **** ***************************************************************************************************
  19:../src/r_cg_timer.c **** 
  20:../src/r_cg_timer.c **** /**************************************************************************************************
  21:../src/r_cg_timer.c **** * File Name    : r_cg_timer.c
  22:../src/r_cg_timer.c **** * Version      : CodeGenerator for RL78/G12 V2.03.04.01 [11 Nov 2016]
  23:../src/r_cg_timer.c **** * Device(s)    : R5F1026A
  24:../src/r_cg_timer.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer.c **** * Creation Date: 2018/10/11
  27:../src/r_cg_timer.c **** ***************************************************************************************************
  28:../src/r_cg_timer.c **** 
  29:../src/r_cg_timer.c **** /**************************************************************************************************
  30:../src/r_cg_timer.c **** Includes
  31:../src/r_cg_timer.c **** ***************************************************************************************************
  32:../src/r_cg_timer.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_timer.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_timer.c **** 
  38:../src/r_cg_timer.c **** /**************************************************************************************************
  39:../src/r_cg_timer.c **** Global variables and functions
  40:../src/r_cg_timer.c **** ***************************************************************************************************
  41:../src/r_cg_timer.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_timer.c **** 
  44:../src/r_cg_timer.c **** /**************************************************************************************************
  45:../src/r_cg_timer.c **** * Function Name: R_TAU0_Create
  46:../src/r_cg_timer.c **** * Description  : This function initializes the TAU0 module.
  47:../src/r_cg_timer.c **** * Arguments    : None
  48:../src/r_cg_timer.c **** * Return Value : None
  49:../src/r_cg_timer.c **** ***************************************************************************************************
  50:../src/r_cg_timer.c **** void R_TAU0_Create(void)
  51:../src/r_cg_timer.c **** {
  39                             		.loc 1 51 0
  52:../src/r_cg_timer.c ****     TAU0EN = 1U;    /* supplies input clock */
  40                             		.loc 1 52 0
  41 0000 C9 F0 F0 00             		movw	r8, #240
  42 0004 AD F0                   		movw	ax, r8
  43 0006 BD F2                   		movw	r10, ax
  44 0008 FA F2                   		movw	hl, r10
  45 000a 71 82                   		set1	[hl].0 ;insvmisalignqi [hl],#1,#0,#1 {0}
  53:../src/r_cg_timer.c ****     TPS0 = _0009_TAU_CKM0_FCLK_9 | _0000_TAU_CKM1_FCLK_0 | _0000_TAU_CKM2_FCLK_1 | _0000_TAU_CKM3_F
  46                             		.loc 1 53 0
  47 000c C9 F0 B6 01             		movw	r8, #438
  48 0010 AD F0                   		movw	ax, r8
  49 0012 BD F4                   		movw	r12, ax
  50 0014 EA F4                   		movw	de, r12
  51 0016 30 09 00                		movw	ax, #9
  52 0019 B9                      		movw	[de], ax
  54:../src/r_cg_timer.c ****     /* Stop all channels */
  55:../src/r_cg_timer.c ****     TT0 = _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON | _0004_TAU_CH2_STOP_TRG_ON |
  53                             		.loc 1 55 0
  54 001a C9 F0 B4 01             		movw	r8, #436
  55 001e AD F0                   		movw	ax, r8
  56 0020 BD F2                   		movw	r10, ax
  57 0022 EA F2                   		movw	de, r10
  58 0024 30 0F 0A                		movw	ax, #2575
  59 0027 B9                      		movw	[de], ax
  56:../src/r_cg_timer.c ****           _0008_TAU_CH3_STOP_TRG_ON | _0200_TAU_CH1_H8_STOP_TRG_ON | _0800_TAU_CH3_H8_STOP_TRG_ON;
  57:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
  58:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
  60                             		.loc 1 58 0
  61 0028 C9 F0 E5 FF             		movw	r8, #-27
  62 002c AD F0                   		movw	ax, r8
  63 002e BD F4                   		movw	r12, ax
  64 0030 FA F4                   		movw	hl, r12
  65 0032 71 E2                   		set1	[hl].6 ;insvmisalignqi [hl],#1,#6,#1 {0}
  59:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
  66                             		.loc 1 59 0
  67 0034 C9 F0 E1 FF             		movw	r8, #-31
  68 0038 AD F0                   		movw	ax, r8
  69 003a BD F2                   		movw	r10, ax
  70 003c FA F2                   		movw	hl, r10
  71 003e 71 E3                   		clr1	[hl].6 ;insvmisalignqi [hl],#1,#6,#0 {0}
  60:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
  61:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
  72                             		.loc 1 61 0
  73 0040 C9 F0 E5 FF             		movw	r8, #-27
  74 0044 AD F0                   		movw	ax, r8
  75 0046 BD F4                   		movw	r12, ax
  76 0048 FA F4                   		movw	hl, r12
  77 004a 71 F2                   		set1	[hl].7 ;insvmisalignqi [hl],#1,#7,#1 {0}
  62:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
  78                             		.loc 1 62 0
  79 004c C9 F0 E1 FF             		movw	r8, #-31
  80 0050 AD F0                   		movw	ax, r8
  81 0052 BD F2                   		movw	r10, ax
  82 0054 FA F2                   		movw	hl, r10
  83 0056 71 F3                   		clr1	[hl].7 ;insvmisalignqi [hl],#1,#7,#0 {0}
  63:../src/r_cg_timer.c ****     /* Mask channel 1 higher 8 bits interrupt */
  64:../src/r_cg_timer.c ****     TMMK01H = 1U;    /* disable INTTM01H interrupt */
  84                             		.loc 1 64 0
  85 0058 C9 F0 E5 FF             		movw	r8, #-27
  86 005c AD F0                   		movw	ax, r8
  87 005e BD F4                   		movw	r12, ax
  88 0060 FA F4                   		movw	hl, r12
  89 0062 71 B2                   		set1	[hl].3 ;insvmisalignqi [hl],#1,#3,#1 {0}
  65:../src/r_cg_timer.c ****     TMIF01H = 0U;    /* clear INTTM01H interrupt flag */
  90                             		.loc 1 65 0
  91 0064 C9 F0 E1 FF             		movw	r8, #-31
  92 0068 AD F0                   		movw	ax, r8
  93 006a BD F2                   		movw	r10, ax
  94 006c FA F2                   		movw	hl, r10
  95 006e 71 B3                   		clr1	[hl].3 ;insvmisalignqi [hl],#1,#3,#0 {0}
  66:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
  67:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
  96                             		.loc 1 67 0
  97 0070 C9 F0 E6 FF             		movw	r8, #-26
  98 0074 AD F0                   		movw	ax, r8
  99 0076 BD F4                   		movw	r12, ax
 100 0078 FA F4                   		movw	hl, r12
 101 007a 71 82                   		set1	[hl].0 ;insvmisalignqi [hl],#1,#0,#1 {0}
  68:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
 102                             		.loc 1 68 0
 103 007c C9 F0 E2 FF             		movw	r8, #-30
 104 0080 AD F0                   		movw	ax, r8
 105 0082 BD F2                   		movw	r10, ax
 106 0084 FA F2                   		movw	hl, r10
 107 0086 71 83                   		clr1	[hl].0 ;insvmisalignqi [hl],#1,#0,#0 {0}
  69:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
  70:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
 108                             		.loc 1 70 0
 109 0088 C9 F0 E6 FF             		movw	r8, #-26
 110 008c AD F0                   		movw	ax, r8
 111 008e BD F4                   		movw	r12, ax
 112 0090 FA F4                   		movw	hl, r12
 113 0092 71 92                   		set1	[hl].1 ;insvmisalignqi [hl],#1,#1,#1 {0}
  71:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
 114                             		.loc 1 71 0
 115 0094 C9 F0 E2 FF             		movw	r8, #-30
 116 0098 AD F0                   		movw	ax, r8
 117 009a BD F2                   		movw	r10, ax
 118 009c FA F2                   		movw	hl, r10
 119 009e 71 93                   		clr1	[hl].1 ;insvmisalignqi [hl],#1,#1,#0 {0}
  72:../src/r_cg_timer.c ****     /* Mask channel 3 higher 8 bits interrupt */
  73:../src/r_cg_timer.c ****     TMMK03H = 1U;    /* disable INTTM03H interrupt */
 120                             		.loc 1 73 0
 121 00a0 C9 F0 E5 FF             		movw	r8, #-27
 122 00a4 AD F0                   		movw	ax, r8
 123 00a6 BD F4                   		movw	r12, ax
 124 00a8 FA F4                   		movw	hl, r12
 125 00aa 71 C2                   		set1	[hl].4 ;insvmisalignqi [hl],#1,#4,#1 {0}
  74:../src/r_cg_timer.c ****     TMIF03H = 0U;    /* clear INTTM03H interrupt flag */
 126                             		.loc 1 74 0
 127 00ac C9 F0 E1 FF             		movw	r8, #-31
 128 00b0 AD F0                   		movw	ax, r8
 129 00b2 BD F2                   		movw	r10, ax
 130 00b4 FA F2                   		movw	hl, r10
 131 00b6 71 C3                   		clr1	[hl].4 ;insvmisalignqi [hl],#1,#4,#0 {0}
  75:../src/r_cg_timer.c ****     /* Set INTTM00 low priority */
  76:../src/r_cg_timer.c ****     TMPR100 = 1U;
 132                             		.loc 1 76 0
 133 00b8 C9 F0 ED FF             		movw	r8, #-19
 134 00bc AD F0                   		movw	ax, r8
 135 00be BD F4                   		movw	r12, ax
 136 00c0 FA F4                   		movw	hl, r12
 137 00c2 71 E2                   		set1	[hl].6 ;insvmisalignqi [hl],#1,#6,#1 {0}
  77:../src/r_cg_timer.c ****     TMPR000 = 1U;
 138                             		.loc 1 77 0
 139 00c4 C9 F0 E9 FF             		movw	r8, #-23
 140 00c8 AD F0                   		movw	ax, r8
 141 00ca BD F2                   		movw	r10, ax
 142 00cc FA F2                   		movw	hl, r10
 143 00ce 71 E2                   		set1	[hl].6 ;insvmisalignqi [hl],#1,#6,#1 {0}
  78:../src/r_cg_timer.c ****     /* Channel 0 used as interval timer */
  79:../src/r_cg_timer.c ****     TMR00 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
 144                             		.loc 1 79 0
 145 00d0 C9 F0 90 01             		movw	r8, #400
 146 00d4 AD F0                   		movw	ax, r8
 147 00d6 BD F4                   		movw	r12, ax
 148 00d8 EA F4                   		movw	de, r12
 149 00da F6                      		clrw	ax
 150 00db B9                      		movw	[de], ax
  80:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
  81:../src/r_cg_timer.c ****     TDR00 = _B71A_TAU_TDR00_VALUE;
 151                             		.loc 1 81 0
 152 00dc C9 F0 18 FF             		movw	r8, #-232
 153 00e0 AD F0                   		movw	ax, r8
 154 00e2 BD F2                   		movw	r10, ax
 155 00e4 EA F2                   		movw	de, r10
 156 00e6 30 1A B7                		movw	ax, #-18662
 157 00e9 B9                      		movw	[de], ax
  82:../src/r_cg_timer.c ****     TO0 &= ~_0001_TAU_CH0_OUTPUT_VALUE_1;
 158                             		.loc 1 82 0
 159 00ea C9 F2 B8 01             		movw	r10, #440
 160 00ee C9 F0 B8 01             		movw	r8, #440
 161 00f2 AD F0                   		movw	ax, r8
 162 00f4 BD F4                   		movw	r12, ax
 163 00f6 FA F4                   		movw	hl, r12
 164 00f8 AB                      		movw	ax, [hl]
 165 00f9 BD F0                   		movw	r8, ax
 166 00fb 5A F0 FE                		and	r8, #254 ;andhi3 r8,r8,#-2
 167 00fe AD F2                   		movw	ax, r10
 168 0100 BD F4                   		movw	r12, ax
 169 0102 EA F4                   		movw	de, r12
 170 0104 AD F0                   		movw	ax, r8
 171 0106 B9                      		movw	[de], ax
  83:../src/r_cg_timer.c ****     TOE0 &= ~_0001_TAU_CH0_OUTPUT_ENABLE;
 172                             		.loc 1 83 0
 173 0107 C9 F2 BA 01             		movw	r10, #442
 174 010b C9 F0 BA 01             		movw	r8, #442
 175 010f AD F0                   		movw	ax, r8
 176 0111 BD F4                   		movw	r12, ax
 177 0113 FA F4                   		movw	hl, r12
 178 0115 AB                      		movw	ax, [hl]
 179 0116 BD F0                   		movw	r8, ax
 180 0118 5A F0 FE                		and	r8, #254 ;andhi3 r8,r8,#-2
 181 011b AD F2                   		movw	ax, r10
 182 011d BD F4                   		movw	r12, ax
 183 011f EA F4                   		movw	de, r12
 184 0121 AD F0                   		movw	ax, r8
 185 0123 B9                      		movw	[de], ax
  84:../src/r_cg_timer.c **** }
 186                             		.loc 1 84 0
 187 0124 D7                      		ret
 188                             	.LFE0:
 190                             		.global	_R_TAU0_Channel0_Start
 192                             	_R_TAU0_Channel0_Start:
 193                             	.LFB1:
  85:../src/r_cg_timer.c **** 
  86:../src/r_cg_timer.c **** /**************************************************************************************************
  87:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Start
  88:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 0 counter.
  89:../src/r_cg_timer.c **** * Arguments    : None
  90:../src/r_cg_timer.c **** * Return Value : None
  91:../src/r_cg_timer.c **** ***************************************************************************************************
  92:../src/r_cg_timer.c **** void R_TAU0_Channel0_Start(void)
  93:../src/r_cg_timer.c **** {
 194                             		.loc 1 93 0
  94:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 195                             		.loc 1 94 0
 196 0125 C9 F0 E1 FF             		movw	r8, #-31
 197 0129 AD F0                   		movw	ax, r8
 198 012b BD F2                   		movw	r10, ax
 199 012d FA F2                   		movw	hl, r10
 200 012f 71 E3                   		clr1	[hl].6 ;insvmisalignqi [hl],#1,#6,#0 {0}
  95:../src/r_cg_timer.c ****     TMMK00 = 0U;    /* enable INTTM00 interrupt */
 201                             		.loc 1 95 0
 202 0131 C9 F0 E5 FF             		movw	r8, #-27
 203 0135 AD F0                   		movw	ax, r8
 204 0137 BD F4                   		movw	r12, ax
 205 0139 FA F4                   		movw	hl, r12
 206 013b 71 E3                   		clr1	[hl].6 ;insvmisalignqi [hl],#1,#6,#0 {0}
  96:../src/r_cg_timer.c ****     TS0 |= _0001_TAU_CH0_START_TRG_ON;
 207                             		.loc 1 96 0
 208 013d C9 F2 B2 01             		movw	r10, #434
 209 0141 C9 F0 B2 01             		movw	r8, #434
 210 0145 AD F0                   		movw	ax, r8
 211 0147 BD F4                   		movw	r12, ax
 212 0149 FA F4                   		movw	hl, r12
 213 014b AB                      		movw	ax, [hl]
 214 014c BD F0                   		movw	r8, ax
 215 014e 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 216 0151 AD F2                   		movw	ax, r10
 217 0153 BD F4                   		movw	r12, ax
 218 0155 EA F4                   		movw	de, r12
 219 0157 AD F0                   		movw	ax, r8
 220 0159 B9                      		movw	[de], ax
  97:../src/r_cg_timer.c **** }
 221                             		.loc 1 97 0
 222 015a D7                      		ret
 223                             	.LFE1:
 225                             		.global	_R_TAU0_Channel0_Stop
 227                             	_R_TAU0_Channel0_Stop:
 228                             	.LFB2:
  98:../src/r_cg_timer.c **** 
  99:../src/r_cg_timer.c **** /**************************************************************************************************
 100:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Stop
 101:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 0 counter.
 102:../src/r_cg_timer.c **** * Arguments    : None
 103:../src/r_cg_timer.c **** * Return Value : None
 104:../src/r_cg_timer.c **** ***************************************************************************************************
 105:../src/r_cg_timer.c **** void R_TAU0_Channel0_Stop(void)
 106:../src/r_cg_timer.c **** {
 229                             		.loc 1 106 0
 107:../src/r_cg_timer.c ****     TT0 |= _0001_TAU_CH0_STOP_TRG_ON;
 230                             		.loc 1 107 0
 231 015b C9 F2 B4 01             		movw	r10, #436
 232 015f C9 F0 B4 01             		movw	r8, #436
 233 0163 AD F0                   		movw	ax, r8
 234 0165 BD F4                   		movw	r12, ax
 235 0167 FA F4                   		movw	hl, r12
 236 0169 AB                      		movw	ax, [hl]
 237 016a BD F0                   		movw	r8, ax
 238 016c 6A F0 01                		or	r8, #1 ;iorhi3 r8,r8,#1
 239 016f AD F2                   		movw	ax, r10
 240 0171 BD F4                   		movw	r12, ax
 241 0173 EA F4                   		movw	de, r12
 242 0175 AD F0                   		movw	ax, r8
 243 0177 B9                      		movw	[de], ax
 108:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
 109:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
 244                             		.loc 1 109 0
 245 0178 C9 F0 E5 FF             		movw	r8, #-27
 246 017c AD F0                   		movw	ax, r8
 247 017e BD F2                   		movw	r10, ax
 248 0180 FA F2                   		movw	hl, r10
 249 0182 71 E2                   		set1	[hl].6 ;insvmisalignqi [hl],#1,#6,#1 {0}
 110:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 250                             		.loc 1 110 0
 251 0184 C9 F0 E1 FF             		movw	r8, #-31
 252 0188 AD F0                   		movw	ax, r8
 253 018a BD F4                   		movw	r12, ax
 254 018c FA F4                   		movw	hl, r12
 255 018e 71 E3                   		clr1	[hl].6 ;insvmisalignqi [hl],#1,#6,#0 {0}
 111:../src/r_cg_timer.c **** }
 256                             		.loc 1 111 0
 257 0190 D7                      		ret
 258                             	.LFE2:
 302                             	.Letext0:
 303                             		.file 2 "../src/iodefine.h"
 304                             		.file 3 "../src/iodefine_ext.h"
